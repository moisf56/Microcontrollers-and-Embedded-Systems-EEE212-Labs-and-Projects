org 0

MOV 40H, #10101100B	; HIGH BYTE
MOV 41H, #11100001B	; LOW BYTE
MOV R2, #5

RANDOM:	MOV 42.0, 41.7	; SAVE 16TH BIT OF LFSR
	ACALL REPEAT
	MOV 42.1, 41.7
	ACALL REPEAT
	MOV 42.2, 41.7
	ACALL REPEAT
	MOV 42.3, 41.7
	ACALL REPEAT
	MOV 42.4, 41.7
	ACALL REPEAT
	MOV 42.5, 41.7
	ACALL REPEAT
	MOV 42.6, 41.7
	ACALL REPEAT
	MOV 42.7, 41.7
	MOV A, 42H
	ACALL CONV	; NOW A HAS THE ASCII OF THE RANDOM NUMBER
	ACALL SEND_DATA
	MOV 40H, A
	MOV A, 41H
	INC A
	MOV 41H, A
	DJNZ R2, RANDOM
HERE:	SJMP HERE




REPEAT:	CLR A
	MOV ACC.7, 41.5
	XRL A, 41H	; WE ONLY WANT THE RESULT OF  D7
	MOV 00h,ACC.7	; SAVE 1ST XOR RESULT IN bit location 00

	MOV ACC.4, 21
	XRL A, 41H	; 2ND XRL OPERATION
	MOV 01h, ACC.4	; SAVE 2ND XOR RESULT 
	MOV ACC.2, 22
	XRL A, 41H
	MOV 02h, ACC.2	; SAVE 3RD XOR RESULT in bit 02
	MOV C, ACC.2
	MOV A, 40H
	RRC A		; AFTER THIS, C WILL HAVE THE MSB OF 40H REG.
	MOV 40H, A
	MOV A, 41H
	RRC A
	MOV 41H, A
	RET


CONV:	MOV B, #10
	div AB
	mov R4, B
	mov B, #10
	div AB
	mov R5, B 
	orl A, #30H
	acall SEND_DATA
	mov A, R5
	orl A, #30H
	acall SEND_DATA
	mov A, R4
	orl A, #30H
	acall SEND_DATA
	sjmp $

end